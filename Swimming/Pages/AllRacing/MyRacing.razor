@attribute [Authorize]
@page "/AllRacing/MyRacing"
@using Swimming.Data
@inject Swimming.IService.IRacingService  RacingService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@using System.Text.Json
@using System.Text.Json.Serialization
<div class="titleicon">
    <span class="oi oi-signal" aria-hidden="true"></span>
    <h1>السباقات </h1>
</div>
<AuthorizeView Context="AuthorizeContext">
    <Authorized>
        @*// <RadzenButton Text="Add" Icon="add" Click="@(args => InsrtRow())" id="bnt-style-general" />*@

        <br />
        <RadzenButton Icon="add_circle_outline" style="margin-bottom:10px; margin-left:1350px;" Text="اضافة" Click="@InsrtRow" />
        <RadzenCard>
            @if (RacingList == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <RadzenGrid @ref="RacingGrid" AllowFiltering="true"
                            AllowPaging="true" PageSize="10"
                            AllowSorting="true" EditMode="DataGridEditMode.Multiple"
                            Data="@RacingList" TItem="Racing">
                    <Columns>

                        <RadzenGridColumn TItem="Racing" Property="RacingName" Title="الاسم" />
                        <RadzenGridColumn TItem="Racing" Property="RacingType" Title="النوع" />
                        <RadzenGridColumn TItem="Racing" Property="al:web:url" Title="تعديل" Filterable="false">
                            <Template Context="Racing">
                                <RadzenButton Width="150px" Text="تعديل" Icon="edit" Click="@(args => Edit(Racing))" id="bnt-style-general" />
                            </Template>
                        </RadzenGridColumn>
                        <RadzenGridColumn Width="150px" TItem="Racing" Property="al:web:url" Title="مسح" Filterable="false">
                            <Template Context="Racing">
                                <RadzenButton Text="مسح" Icon="delete" Click="@(args => Delete(Racing))" id="bnt-style-general" />
                            </Template>
                        </RadzenGridColumn>
                    </Columns>
                </RadzenGrid>

            }
        </RadzenCard>

    </Authorized>
</AuthorizeView>


@code {
    RadzenGrid<Racing> RacingGrid;
    [Parameter]
    public string viewType { get; set; }
    List<Racing> RacingList = new List<Racing>();
    Racing Racings = new Racing();
    IEnumerable<int> yearsofRacing;
    protected override async Task OnInitializedAsync()
    {

        RacingList = await Task.Run(() => RacingService.GetRacings());
    }
    void EditRow(Racing EditRacing)
    {
        RacingGrid.EditRow(EditRacing);
    }
    protected void Edit(Racing UpdateRacing)
    {

        NavigationManager.NavigateTo("AllRacing/Edit/" + UpdateRacing.Id);
    }
    async Task Delete(Racing DeleteRacing)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "هل تريد مسح السباق ؟");
        if (confirmed)
        {
            DeleteRacing.DeleteDate = DateTime.Now;
            RacingService.UpdateRacing(DeleteRacing, yearsofRacing);
            RacingList.Remove(DeleteRacing);
            RacingGrid.Reload();
        }
    }
    protected void InsrtRow()
    {

        NavigationManager.NavigateTo("AllRacing/Add/");
    }

}
