@attribute [Authorize]
@page "/AllCaptain/Add/"
@using Swimming.Data
@using Swimming.CustomModel
@inject IJSRuntime JSRuntime
@inject Swimming.IService.IParticipantSevice ParticipantSevice
@inject NavigationManager NavigationManager
    <h1>انشاء الكباتن/الهيئات</h1>
<hr />
<RadzenCard>
    <AuthorizeView Context="authContext">
        <Authorized>
            <EditForm Model="@NewCaptainOrOrganization" OnValidSubmit="CreateParticipat" Context="formContext">
                <DataAnnotationsValidator />
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="Name" class="control-label">الاسم</label>
                        <InputText for="Name" class="form-control" @bind-Value="@NewCaptainOrOrganization.CaptainOrOrganizName"></InputText>

                    </div>
                    <div class="form-group">
                        <label asp-for="Address" class="control-label">الموبيل</label>
                        <InputText asp-for="Address" class="form-control" @bind-Value="@NewCaptainOrOrganization.Mobile"></InputText>
                    </div>                                 
                    <div class="form-group">
                        <label asp-for="Type" class="control-label">المحافظة</label>
                        <RadzenDropDown AllowClear="true"
                                        TValue="int"
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        FilterOperator="StringFilterOperator.Contains"
                                        AllowFiltering="true"
                                        Data="@allCities"
                                        TextProperty="City"
                                        ValueProperty="CityCode"
                                        Style="margin-bottom: 20px"
                                        Change="@(args => Change(args))"
                                        @bind-Value="@NewCaptainOrOrganization.City"
                                        class="form-control" />
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-default">حفظ</button>
                        <button class="btn" type="button" @onclick="() => cancel()">الغاء</button>
                    </div>

                </div>
            </EditForm>
        </Authorized>
    </AuthorizeView>
</RadzenCard>


@code {
    bool popup;
    CaptainOrOrganization NewCaptainOrOrganization = new CaptainOrOrganization();
    public string StateMessage { get; set; }
    List<Cities> allCities = new List<Cities>();   
    protected override async Task OnInitializedAsync()
    {

        allCities = await Task.Run(() => ParticipantSevice.GetCities());
    }
    protected void CreateParticipat()
    {
        ParticipantSevice.AddCaptainOrOrg(NewCaptainOrOrganization);
        NavigationManager.NavigateTo("AllCaptain/CaptainOrOrg/", true);
    }

    void cancel()
    {

        NavigationManager.NavigateTo("AllCaptain/CaptainOrOrg/", true);
    }

    void Change(object value)
    {
        var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;
        // StateHasChanged();
    }
}