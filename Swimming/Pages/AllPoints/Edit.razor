@attribute [Authorize]
@page "/AllPoints/Edit/{PonitsId}"
@using Swimming.Data
@using Swimming.CustomModel
@inject IJSRuntime JSRuntime
@inject Swimming.IService.IRacingService RacingService
@inject NavigationManager NavigationManager
    <div class="titleicon">
        <span class="oi oi-list" aria-hidden="true"></span>
        <h1>تعديل نقاط </h1>
    </div>
    <hr />
    <RadzenCard>
        <AuthorizeView Context="authContext">
            <Authorized>
                <EditForm Model="@UPPoints" OnValidSubmit="UpdatePoints" Context="formContext">
                    <DataAnnotationsValidator />
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="No" class="control-label">المركز</label>
                            <InputNumber for="No" class="form-control" @bind-Value="@UPPoints.No"></InputNumber>

                        </div>
                        <div class="form-group">
                            <label for="point" class="control-label">النقاط</label>
                            <InputNumber for="point" class="form-control" @bind-Value="@UPPoints.point"></InputNumber>

                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-default">حفظ</button>
                            <button class="btn" type="button" @onclick="() => cancel()">إلغاء</button>
                        </div>

                    </div>
                </EditForm>
            </Authorized>
        </AuthorizeView>
    </RadzenCard>


    @code {
        [Parameter]
        public string PonitsId { get; set; }
        Points UPPoints = new Points();
        List<Points> allPointsList = new List<Points>();
        protected override async Task OnInitializedAsync()
        {
            UPPoints = RacingService.GePointbyId(Convert.ToInt32(PonitsId));
        }
        protected void UpdatePoints()
        {
            RacingService.UpdatePoint(UPPoints);
            NavigationManager.NavigateTo("AllPoints/MyPoints/", true);
        }

        void cancel()
        {

            NavigationManager.NavigateTo("AllPoints/MyPoints/", true);
        }

        void Change(object value)
        {
            var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;
            // StateHasChanged();
        }

    }